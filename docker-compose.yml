#Docker Compose Datei zum ausführen aller Services (Version 3.8)
version: '3.8'

services:
 
 #Service zur Generierung von Autohaus Datensätzen 
  autohaus_data_generate:
    build:
      context: .
      dockerfile: Docker-generate
    volumes:
      - data-volume:/app/csv_data

#Service setzt eine SQL-Datenbank auf und setzt User und Passwort
  mysql_db:
    image: mysql:8.0
    restart: on-failure
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: autohaus_db
      MYSQL_USER: user
      MYSQL_PASSWORD: rootpassword
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql 

#Service importiert die Datensätze in die Datenbank (Abhängigkeit von vorherigen 2 Services)
  import:
    build:
      context: .
      dockerfile: Docker-import
    depends_on:
      - autohaus_data_generate 
      - mysql_db
    environment:   
      DB_HOST: mysql_db
      DB_USER: user
      DB_PASSWORD: rootpassword
      DB_NAME: autohaus_db
    volumes:
      - data-volume:/app/csv_data 

#Service aggregiert die importierten Daten in der Datenbank und ist abhängig vom Import-Service
#Apache Spark wird zur Aggregierung verwendet 
  aggregate:
    build:
      context: .
      dockerfile: Docker-spark
    depends_on:
      - import
    environment:
      DB_HOST: mysql_db
      DB_USER: user
      DB_PASSWORD: rootpassword
      DB_NAME: autohaus_db
    volumes:
      - data-volume:/app/csv_data

#Service zur Visualisierung der aggregierten Daten. Abhängigkeit zum Aggregation-Service
#Pandas wird zur Visualisierung genutzt
  visualize:
    build:
      context: .
      dockerfile: Docker-visualize
    depends_on:
      - aggregate
    environment:
      DB_HOST: mysql_db
      DB_USER: user
      DB_PASSWORD: rootpassword
      DB_NAME: autohaus_db
    volumes:
      - data-volume:/app/csv_data

#Definition des Speicherortes 
volumes:
  mysql-data:   
  
